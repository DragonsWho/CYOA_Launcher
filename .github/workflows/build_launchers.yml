name: Build CYOA Launcher

on:
  push:
    branches: [ main ] # Or your default branch e.g., master
    tags:
      - 'v*' # Also run on version tags like v1.0, v1.2.3
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    name: Build for ${{ matrix.os_name }}
    runs-on: ${{ matrix.os_image }} # Use OS image from the matrix
    strategy:
      matrix:
        # Define the different build configurations
        include:
          - os_name: Windows
            os_image: windows-latest
            icon_file: icon.ico
            output_name: "CYOA Launcher.exe"
            artifact_suffix: Windows
          - os_name: Linux
            os_image: ubuntu-latest
            icon_file: "" # PyInstaller usually ignores --icon for Linux executables
            output_name: "CYOA Launcher"
            artifact_suffix: Linux
          - os_name: macOS
            os_image: macos-latest
            icon_file: icon.icns
            output_name: "CYOA Launcher.app" # For macOS, it's an .app bundle
            artifact_suffix: macOS

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Adjust if needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build Application
        # Construct the PyInstaller command dynamically
        # Note: For Linux, --icon will be present but likely ignored for the executable itself.
        # For Windows and macOS, it's essential.
        run: |
          PYINSTALLER_CMD="pyinstaller --onefile --windowed --name \"CYOA Launcher\""
          if [ -n "${{ matrix.icon_file }}" ]; then
            PYINSTALLER_CMD="$PYINSTALLER_CMD --icon=${{ matrix.icon_file }}"
          fi
          PYINSTALLER_CMD="$PYINSTALLER_CMD CYOA_Launcher.py"
          echo "Running PyInstaller command: $PYINSTALLER_CMD"
          eval $PYINSTALLER_CMD
        shell: bash # Ensure bash is used for the script block for consistent behavior

      - name: Prepare Artifact Path (Windows)
        if: matrix.os_name == 'Windows'
        run: |
          echo "ARTIFACT_PATH=dist/${{ matrix.output_name }}" >> $GITHUB_ENV
        shell: bash

      - name: Prepare Artifact Path (Linux)
        if: matrix.os_name == 'Linux'
        run: |
          echo "ARTIFACT_PATH=dist/${{ matrix.output_name }}" >> $GITHUB_ENV
        shell: bash

      - name: Prepare Artifact Path (macOS)
        if: matrix.os_name == 'macOS'
        run: |
          echo "ARTIFACT_PATH=dist/${{ matrix.output_name }}" >> $GITHUB_ENV # This is an .app folder
        shell: bash
        
      - name: List dist directory (for debugging)
        run: ls -R dist
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CYOA-Launcher-${{ matrix.artifact_suffix }}
          path: ${{ env.ARTIFACT_PATH }}