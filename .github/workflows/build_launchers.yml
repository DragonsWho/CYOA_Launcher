name: Build CYOA Launcher

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os_name }}
    runs-on: ${{ matrix.os_image }}
    strategy:
      matrix:
        include:
          - os_name: Windows
            os_image: windows-latest
            spec_file: "CYOA Launcher.spec" # Указываем spec файл
            icon_cli_opt: "--icon=icon.ico" # Опция иконки для командной строки
            output_name: "CYOA Launcher.exe"
            artifact_suffix: Windows
          - os_name: Linux
            os_image: ubuntu-latest
            spec_file: "CYOA Launcher.spec"
            icon_cli_opt: "" # Иконка для Linux обычно не через CLI для исполняемого файла
            output_name: "CYOA Launcher"
            artifact_suffix: Linux
          - os_name: macOS
            os_image: macos-latest
            spec_file: "CYOA Launcher.spec" # Или отдельный spec для .app
            icon_cli_opt: "--icon=icon.icns"
            output_name: "CYOA Launcher.app" # Или просто "CYOA Launcher" если spec не делает .app
            artifact_suffix: macOS

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller beautifulsoup4 chardet requests

      # Опционально: установка UPX для уменьшения размера
      - name: Install UPX (Linux)
        if: matrix.os_name == 'Linux'
        run: |
          sudo apt-get update && sudo apt-get install -y upx-ucl
      # Для Windows UPX обычно нужно скачивать отдельно
      # Для macOS: brew install upx (если brew доступен)

      - name: Build Application using Spec
        run: |
          pyinstaller --onefile --noconfirm ${{ matrix.icon_cli_opt }} "${{ matrix.spec_file }}"
        # --noconfirm чтобы перезаписывать папку dist/build без вопросов
        # Опцию --windowed и --name можно убрать, если они уже правильно заданы в .spec файле
        # Если в .spec уже есть EXE(..., console=False, ...), то --windowed не нужен в CLI.
        # Если в .spec уже есть EXE(..., name='CYOA Launcher', ...), то --name не нужен в CLI.
        # Опция --icon из CLI может переопределить иконку из spec, если нужно.
        shell: bash

      - name: Prepare Artifact Path
        id: prepare_artifact
        run: |
          if [ "${{ matrix.os_name }}" == "macOS" ]; then
            echo "artifact_path=dist/${{ matrix.output_name }}" >> $GITHUB_ENV
          else
            echo "artifact_path=dist/${{ matrix.output_name }}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: List dist directory
        run: ls -R dist
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CYOA-Launcher-${{ matrix.artifact_suffix }}
          path: ${{ env.artifact_path }}