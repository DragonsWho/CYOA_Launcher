name: Build CYOA Launcher

on:
  push:
    branches:
      - main # Или ваша основная ветка (master, develop, etc.)
  pull_request:
    branches:
      - main # Или ваша основная ветка

jobs:
  build:
    name: Build on ${{ matrix.os_name }}
    runs-on: ${{ matrix.os_image }}
    strategy:
      matrix:
        include:
          - os_name: Linux
            os_image: ubuntu-latest
            python_version: '3.9'
            icon_file: "icon.png" # PyInstaller может использовать PNG для Linux
            output_name: "CYOA_Launcher-linux"
            pyinstaller_options: ""
          - os_name: Windows
            os_image: windows-latest
            python_version: '3.9'
            icon_file: "icon.ico"
            output_name: "CYOA_Launcher-windows.exe"
            pyinstaller_options: ""
          - os_name: macOS
            os_image: macos-latest # Обычно macos-12 или macos-13, latest = macos-12 сейчас
            python_version: '3.9'
            icon_file: "icon.icns"
            output_name: "CYOA_Launcher-macos" # .app будет внутри zip
            pyinstaller_options: "--onefile" # Для macOS --onefile создает .app, которое затем можно упаковать

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --name "CYOA Launcher" \
                    --windowed \
                    ${{ matrix.pyinstaller_options }} \
                    --icon="${{ matrix.icon_file }}" \
                    CYOA_Launcher.py

    - name: Prepare Artifact (Linux)
      if: matrix.os_name == 'Linux'
      run: |
        mkdir artifact
        cp dist/"CYOA Launcher" artifact/"${{ matrix.output_name }}"
        # Если бы вы не использовали --onefile, то было бы:
        # tar -czvf artifact/"${{ matrix.output_name }}.tar.gz" -C dist/ ."CYOA Launcher"

    - name: Prepare Artifact (Windows)
      if: matrix.os_name == 'Windows'
      run: |
        mkdir artifact
        copy dist\"CYOA Launcher.exe" artifact\"${{ matrix.output_name }}"
        # Если бы вы не использовали --onefile, то было бы:
        # 7z a artifact\"${{ matrix.output_name }}.zip" dist\"CYOA Launcher"\*

    - name: Prepare Artifact (macOS)
      if: matrix.os_name == 'macOS'
      run: |
        mkdir artifact
        # PyInstaller с --windowed на macOS создает .app бандл в dist/
        # Его нужно заархивировать для загрузки
        ditto -c -k --sequesterRsrc --keepParent dist/"CYOA Launcher.app" artifact/"${{ matrix.output_name }}.zip"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: CYOA-Launcher-${{ matrix.os_name }}
        path: artifact/
        if-no-files-found: error # Завершать с ошибкой, если артефакты не найдены